package controller;

import model.Pessoa;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

public class PessoaController {
    private List<Pessoa> pessoas = new ArrayList<>();

    // Adicionar uma pessoa
    public void adicionarPessoa(Pessoa pessoa) {
        pessoas.add(pessoa);
        System.out.println("Pessoa adicionada com sucesso: " + pessoa.getNome());
    }

    // Listar todas as pessoas
    public void listarPessoas() {
        if (pessoas.isEmpty()) {
            System.out.println("Nenhuma pessoa cadastrada.");
        } else {
            for (Pessoa p : pessoas) {
                System.out.println(p);
            }
        }
    }

    // Buscar uma pessoa pelo ID
    public Pessoa buscarPessoa(int id) {
        Optional<Pessoa> pessoa = pessoas.stream().filter(p -> p.getId() == id).findFirst();
        return pessoa.orElse(null);
    }

    // Atualizar os dados de uma pessoa pelo ID
    public boolean atualizarPessoa(int id, Pessoa novaPessoa) {
        for (Pessoa p : pessoas) {
            if (p.getId() == id) {
                p.setNome(novaPessoa.getNome());
                p.setSobrenome(novaPessoa.getSobrenome());
                p.setCpf(novaPessoa.getCpf());
                p.setEmail(novaPessoa.getEmail());
                p.setTelefone(novaPessoa.getTelefone());
                p.setAniversario(novaPessoa.getAniversario());
                p.setSenha(novaPessoa.getSenha());
                p.setEndereco(novaPessoa.getEndereco());
                return true;
            }
        }
        return false;
    }

    // Remover uma pessoa pelo ID
    public boolean removerPessoa(int id) {
        return pessoas.removeIf(p -> p.getId() == id);
    }
}
